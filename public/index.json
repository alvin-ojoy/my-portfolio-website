
[{"content":"Hey there!\nA self-taught DevOps enthusiast with an AWS certification and a passion for building scalable, efficient systems. My journey started in telecoms engineering, where I developed a knack for problem-solving and infrastructure—skills I now channel into cloud technologies and automation.\nWhen I’m not architecting pipelines or tinkering with IaC, I run a YouTube channel exploring filmmaking and videography. Storytelling through code and cameras? That’s my kind of workflow.\nLet’s connect—whether it’s about cloud tech, CI/CD, or the perfect camera gear!\n-Alvin\n","date":"15 November 2024","externalUrl":null,"permalink":"/","section":"","summary":"","title":"","type":"page"},{"content":"","date":"15 November 2024","externalUrl":null,"permalink":"/projects/","section":"","summary":"","title":"","type":"projects"},{"content":" Overview # A serverless CI/CD pipeline built on AWS (CodePipeline, ECS, Terraform) to deploy a containerized Python app with zero-downtime blue/green deployments.\nDiagram: AWS services used (CodeCommit → CodeBuild → CodeDeploy → ECS)\nKey Features # ✅ Infrastructure as Code: Terraform-managed AWS resources (VPC, ECS, IAM roles) 🔄 Blue/Green Deployments: Automated traffic shifting via AWS CodeDeploy 🔐 Security: Secrets management with AWS Parameter Store + IAM least privilege 📊 Monitoring: CloudWatch alarms for pipeline failures Technical Stack # AWS Services: - CodePipeline, CodeBuild, CodeDeploy - ECS Fargate (serverless containers) - Terraform (v1.5+) Tools: - Docker, GitHub Actions (for linting) - Trivy (container vulnerability scanning) ","date":"15 November 2024","externalUrl":null,"permalink":"/projects/aws-ci-cd-pipeline/","section":"","summary":"","title":"Automated CI/CD Pipeline with AWS \u0026 Terraform","type":"projects"},{"content":"","date":"15 November 2024","externalUrl":null,"permalink":"/tags/aws/","section":"Tags","summary":"","title":"Aws","type":"tags"},{"content":"","date":"15 November 2024","externalUrl":null,"permalink":"/tags/ci-cd/","section":"Tags","summary":"","title":"Ci-Cd","type":"tags"},{"content":"","date":"15 November 2024","externalUrl":null,"permalink":"/tags/devops/","section":"Tags","summary":"","title":"Devops","type":"tags"},{"content":"","date":"15 November 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"15 November 2024","externalUrl":null,"permalink":"/tags/terraform/","section":"Tags","summary":"","title":"Terraform","type":"tags"},{"content":"","date":"20 October 2023","externalUrl":null,"permalink":"/tags/grafana/","section":"Tags","summary":"","title":"Grafana","type":"tags"},{"content":"","date":"20 October 2023","externalUrl":null,"permalink":"/tags/helm/","section":"Tags","summary":"","title":"Helm","type":"tags"},{"content":"","date":"20 October 2023","externalUrl":null,"permalink":"/tags/kubernetes/","section":"Tags","summary":"","title":"Kubernetes","type":"tags"},{"content":"","date":"20 October 2023","externalUrl":null,"permalink":"/tags/prometheus/","section":"Tags","summary":"","title":"Prometheus","type":"tags"},{"content":" Overview # A production-grade monitoring solution for Kubernetes clusters using Prometheus (metrics), Grafana (visualization), and Alertmanager—deployed via Helm with custom dashboards.\nDiagram: Prometheus scrapes metrics from K8s pods/node exporters; Grafana visualizes data.\nKey Features # 📊 Custom Dashboards: Track CPU/memory/network metrics per namespace/deployment 🔔 Alerts: Slack/email notifications for pod crashes or node pressure ☸ Helm Automation: One-command deploy/upgrade (helm install -f values-prod.yaml) 🔒 Security: Prometheus scrape targets secured with RBAC Technical Stack # Core Tools: - Prometheus Operator (v0.60+) - Grafana (v9.5+) - Alertmanager (v0.25+) - Helm (v3.12+) Infrastructure: - EKS (AWS) + kube-prometheus-stack Helm chart - Terraform for EKS provisioning (separate repo) ","date":"20 October 2023","externalUrl":null,"permalink":"/projects/k8s-monitoring/","section":"","summary":"","title":"Real-Time Kubernetes Monitoring Stack","type":"projects"},{"content":"","date":"5 September 2023","externalUrl":null,"permalink":"/tags/lambda/","section":"Tags","summary":"","title":"Lambda","type":"tags"},{"content":"","date":"5 September 2023","externalUrl":null,"permalink":"/tags/python/","section":"Tags","summary":"","title":"Python","type":"tags"},{"content":"","date":"5 September 2023","externalUrl":null,"permalink":"/tags/serverless/","section":"Tags","summary":"","title":"Serverless","type":"tags"},{"content":" Overview # A cost-efficient analytics pipeline that fetches YouTube API data (views, engagement) daily via AWS Lambda, processes it with Pandas, and visualizes it in a React frontend.\nFlow: YouTube API → S3 (raw) → Lambda (transform) → DynamoDB → React frontend\nKey Features # 🚀 Serverless: Lambda + DynamoDB + S3 (zero idle costs) 📈 Automated Reports: Email summaries via Amazon SES 🔄 CI/CD: Terraform deploys Lambda + API Gateway 🎥 Filmmaking Metrics: Track audience retention vs. video edits Technical Stack # AWS Services: - Lambda (Python 3.10) - DynamoDB (NoSQL) - EventBridge (scheduled triggers) - S3 (data lake) Libraries: - Pandas (data cleaning) - Matplotlib (generate graphs) - Serverless Framework (deployment) ","date":"5 September 2023","externalUrl":null,"permalink":"/projects/youtube-analytics/","section":"","summary":"","title":"Serverless YouTube Channel Analytics Tool","type":"projects"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]